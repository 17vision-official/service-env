version: "3.9"
services:
  redis:
    image: holovision-redis:7.2
    container_name: redis7.2
    restart: always
    privileged: false
    volumes:
      - ./conf/redis/redis.conf:/etc/redis/redis.conf
      - ${DATA_DIR}/redis:/data
      - ${LOG_DIR}/redis:/logs
    ports:
      - ${REDIS_PORT}:6379
    environment:
      - TZ:${TZ}
    command: redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    networks: 
      - ycsjnet
  mysql: 
    image: holovision-mysql:8.2
    container_name: mysql${MYSQL_VERSION}
    restart: always
    privileged: false
    volumes:
      - ${DATA_DIR}/mysql${MYSQL_VERSION}:/var/lib/mysql
      - ./conf/mysql:/docker-mysql
      - ./conf/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs/mysql:/var/log/mysql
      - ./conf/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      TZ: ${TZ}
      # MYSQL_DATABASE: ${MYSQL_DATABASE}  通过 conf/mysql/init.sql 来创建初始化数据库
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --lower_case_table_names=1  --general-log=1 --general-log-file=/var/log/mysql/general.log
    networks: 
      - ycsjnet
  php82:
    image: holovision-php:8.2
    container_name: php8.2
    restart: always
    privileged: true
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${CONF_DIR}/php/php.ini/:/usr/local/etc/php/php.ini
      - ${LOG_DIR}/php82:/var/log/php
    environment:
      - TZ:${TZ}
    depends_on:
      - redis
      - mysql
    networks: 
      - ycsjnet
  php83:
    image: holovision-php:8.3
    container_name: php8.3
    restart: always
    privileged: true
    volumes:
      - ${DABAOENSI_ROOT}:/www/dabaoensi.laravel
      - ${YILIAO_ROOT}:/www/yiliao.laravel
      - ${CONF_DIR}/php/php.ini/:/usr/local/etc/php/php.ini
      - ${LOG_DIR}/php83:/var/log/php
    environment:
      - TZ:${TZ}
    depends_on:
      - redis
      - mysql
    networks: 
      - ycsjnet
  nginx:
    image: holovision-nginx:1.25.3
    container_name: nginx${NGINX_VERSION}
    restart: always
    privileged: false
    ports:
      - ${NGINX_HTTP_HOST_PORT}:80
      - ${NGINX_HTTPS_HOST_PORT}:443
      - 5173:5173
      - 1998:1998
      - 1999:1999
    volumes:
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/
      - ${NGINX_SSL_CERTIFICATE_DIR}:/etc/nginx/ssl
      - ${LOG_DIR}/nginx${NGINX_VERSION}:/var/log/nginx
      - ${SOURCE_DIR}:/www/
      - ${DABAOENSI_ROOT}:/www/dabaoensi.laravel
      - ${YILIAO_ROOT}:/www/yiliao.laravel
    environment:
      - TZ:${TZ}
    depends_on:
      - php82
    networks: 
      - ycsjnet
  awrtc:
    image: holovision-node:20
    container_name: awrtc-1.0
    restart: always
    privileged: false
    working_dir: /app/awrtc
    volumes:
      - ${AWRTC_SERVER_DIR}:/app/awrtc
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "cd /app/awrtc && npm run start",
      ] 
    ports:
      - ${AWRTC_SERVER_PORT}:3700
    networks: 
      - ycsjnet
  # signalserver:
  #   image: holovision-node:20
  #   container_name: webrtc-signalserver-1.0
  #   restart: always
  #   privileged: false
  #   working_dir: /app/signalserver
  #   volumes:
  #     - ${SIGNALSERVER_DIR}:/app/signalserver
  #   entrypoint:
  #     [
  #       "/bin/bash",
  #       "-c",
  #       "cd /app/signalserver && npm install && export TZ=Asia/Shanghai && npm run serve",
  #     ] 
  #   ports:
  #     - ${SIGNALSERVER_PORT}:3600
  #   networks: 
  #     - ycsjnet
  # dss:
  #   image: holovision-node:20
  #   container_name: dss
  #   restart: always
  #   privileged: false
  #   working_dir: /app/node-dss
  #   volumes:
  #     - ${NODE_DIR}/node-dss:/app/node-dss
  #   entrypoint:
  #     [
  #       "/bin/bash",
  #       "-c",
  #       "cd /app/node-dss && export DEBUG=dss* && npm install && npm start",
  #     ]
  #   ports:
  #     - "3000:3000"
  #   networks: 
  #     - ycsjnet
  # meilisearch:
  #   image: getmeili/meilisearch:latest
  #   container_name: meilisearch_latest
  #   ports:
  #     - "7700:7700"
  #   environment:
  #     - MEILI_MASTER_KEY=masterKey
  #     - MEILI_NO_ANALYTICS=true
  #   volumes:
  #     - ${DATA_DIR}/meilisearch:/var/lib/meilisearch
  #   restart: always
  #   networks:
  #     - ycsjnet
networks:
  ycsjnet:
    name: 'ycsjnet'
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
        # - subnet: 172.85.0.0/16
