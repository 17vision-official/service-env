version: "3.9"
services:
  redis:
    image: holovision-redis:7.2
    container_name: redis7.2
    restart: always
    privileged: false
    volumes:
      - ./conf/redis/redis.conf:/etc/redis/redis.conf
      - ${DATA_DIR}/redis:/data
      - ${LOG_DIR}/redis:/logs
    ports:
      - ${REDIS_PORT}:6379
    environment:
      - TZ:${TZ}
    command: redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    networks: 
      - ycsjnet
  mysql: 
    image: holovision-mysql:8.2
    container_name: mysql${MYSQL_VERSION}
    restart: always
    privileged: false
    volumes:
      - ${DATA_DIR}/mysql${MYSQL_VERSION}:/var/lib/mysql
      - ./conf/mysql:/docker-mysql
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      TZ: ${TZ}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --lower_case_table_names=1
    networks: 
      - ycsjnet
  php82:
    image: holovision-php:8.2
    container_name: php8.2
    restart: always
    privileged: true
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${CONF_DIR}/php/php.ini/:/usr/local/etc/php/php.ini
      - ${LOG_DIR}/php82:/var/log/php
    environment:
      - TZ:${TZ}
    depends_on:
      - redis
      - mysql
    networks: 
      - ycsjnet
  nginx:
    image: holovision-nginx:1.25.3
    container_name: nginx${NGINX_VERSION}
    restart: always
    privileged: false
    ports:
      - ${NGINX_HTTP_HOST_PORT}:80
      - ${NGINX_HTTPS_HOST_PORT}:443
    volumes:
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/
      - ${NGINX_SSL_CERTIFICATE_DIR}:/etc/nginx/ssl
      - ${LOG_DIR}/nginx${NGINX_VERSION}:/var/log/nginx
      - ${SOURCE_DIR}:/www/
    environment:
      - TZ:${TZ}
    depends_on:
      - php82
    networks: 
      - ycsjnet
  # node:
  #   image: holovision-node:20
  #   container_name: node${NODE_VERSION}
  #   restart: always
  #   privileged: false
  #   working_dir: /app
  #   volumes:
  #     - ${NODE_DIR}:/app
  #   ports:
  #     - "3000:3000"
  #   networks: 
  #     - ycsjnet
networks:
  ycsjnet:
    name: 'ycsjnet'
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
